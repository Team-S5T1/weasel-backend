/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

//dependencyManagement {
//    imports {
//        mavenBom "org.springframework.cloud:spring-cloud-aws-dependencies:3.0.2" // 최신 버전 확인 필요
//    }
//}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // 쿼리 파라미터 로그 찍는 라이브러리
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    // 로컬에서 돌리기 위한 데이터베이스(h2 database)
    runtimeOnly 'com.h2database:h2'

    // template(thymeleaf)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // springboot
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // lombok
    compileOnly 'org.projectlombok:lombok'

    // 개발자 도구 템플릿 화면을 고치면 재시작 해야 하지만 이 라이브러리 덕분에 좀 더 수월하다
    // 빌드 => 다시 빌드 => 브라우저 가서 f5
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // myslq jdbc 라이브러리
    runtimeOnly 'com.mysql:mysql-connector-j'

    // AWS Secret Manager 라이브러리
    implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.4.4'

    // json 관련 라이브러리
    implementation("com.google.code.gson:gson:2.10.1")
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1' // 적절한 Jackson 버전

    // 그 외 라이브러리
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'junit:junit:4.13.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'exam.master.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
